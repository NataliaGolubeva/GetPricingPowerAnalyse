{"version":3,"sources":["components/Header.jsx","components/Input.jsx","components/InputPercent.jsx","components/AddInputForm.jsx","components/AddCurrentState.jsx","components/charts/BulletChart.jsx","components/AddStatImpact.jsx","components/slider/Slider.jsx","components/slider/PriceSlider.jsx","components/slider/CostsSlider.jsx","components/slider/AddSlider.jsx","components/charts/CandleStickChart.jsx","components/InputFront.jsx","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Header","InputEuro","props","className","type","rest","classes","clsx","min","ml","mb","bg","pointerEvents","color","fontSize","children","InputPercent","AddInputForm","mx","my","size","textAlign","htmlFor","Input","value","volume","onChange","onVolumeChange","maxWidth","price","onPriceChange","costs","onCostsChange","cogs","onCogsChange","taxes","onTaxesChange","targetProfit","onTargetProfitChange","validation","AddCurrentState","m","variant","isNumeric","revenue","totalCosts","ebitda","netProfit","BulletChart","sales","BulletCharts","containerRef","React","createRef","state","width","handleResize","current","clientWidth","setState","this","window","addEventListener","removeEventListener","ref","style","height","mt","align","ChartBullet","ariaDesc","ariaTitle","comparativeWarningMeasureData","name","y","comparativeWarningMeasureLegendData","constrainToVisibleArea","labels","datum","legendAllowWrap","legendPosition","maxDomain","padding","bottom","left","right","top","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","titlePosition","Component","AddStatImpact","salesIncrease","priceIncrease","costsDecrease","difNetProfitVolumeEuro","difNetProfitVolumePercent","difNetProfitPriceEuro","difNetProfitPricePercent","difNetProfitCostsEuro","difNetProfitCostsPercent","optimizationTotalEuro","optimizationTotalPercent","newPrice","Slider","onSalesIncrease","MySlider","handleOnChange","max","PriceSlider","onPriceIncrease","CostsSlider","onCostsDecrease","Styles","styled","div","AddSlider","App","CandleStickChart","total","ApexChart","series","data","x","options","chart","title","text","xaxis","yaxis","tooltip","enabled","id","InputFront","useState","setVolume","setPrice","fixedCosts","setFixedCosts","setCogs","setTaxes","setTargetProfit","setSalesIncrease","setPriceIncrease","setCostsDecrease","Math","round","newRevenueVolumeInc","newTotalCostsVolumeInc","toFixed","newRevenuePriceInc","newTotalCostsPriceInc","newTotalCostsDec","salesToTarget","priceToTarget","costsToTarget","templateRows","templateColumns","gap","rowSpan","colSpan","e","parseInt","target","onFormSubmit","event","preventDefault","theme","extendTheme","fonts","heading","body","colors","brand","100","200","300","400","900","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+OAUeA,I,+ECuBAC,MAxBf,SAAmBC,GAAQ,IACjBC,EAAwCD,EAAxCC,UADgB,EACwBD,EAA7BE,YADK,MACE,SADF,EACeC,EADf,YACwBH,EADxB,sBAElBI,EAAUC,YAAK,iBAAkBJ,GAEvC,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAaK,IAAK,EAAGC,GAAG,OAAOC,GAAI,EAAnC,UACE,cAAC,IAAD,yBACEP,UAAWG,EACXF,KAAMA,GACFC,GAHN,IAIEM,GAAG,WAEL,cAAC,IAAD,CACEC,cAAc,OACdC,MAAM,WACNC,SAAS,QACTC,SAAS,iBCOJC,MAxBf,SAAsBd,GAAQ,IACpBC,EAAwCD,EAAxCC,UADmB,EACqBD,EAA7BE,YADQ,MACD,SADC,EACYC,EADZ,YACqBH,EADrB,sBAErBI,EAAUC,YAAK,iBAAkBJ,GAEvC,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAaK,IAAK,EAAGC,GAAG,OAAOC,GAAI,EAAnC,UACE,cAAC,IAAD,yBACEP,UAAWG,EACXF,KAAMA,GACFC,GAHN,IAIEM,GAAG,WAEL,cAAC,IAAD,CACEC,cAAc,OACdC,MAAM,WACNC,SAAS,QACTC,SAAS,YC6CJE,MAlEf,SAAsBf,GACpB,OACE,eAAC,IAAD,CAAQC,UAAU,YAAYe,GAAI,EAAGC,GAAI,EAAzC,UACE,cAAC,IAAD,CAASC,KAAK,KAAKD,GAAI,EAAGE,UAAU,SAApC,sCAGA,eAAC,IAAD,WACE,uBAAOC,QAAQ,cAAf,qCACA,cAACC,EAAD,CACEpB,UAAU,cACVqB,MAAOtB,EAAMuB,OACbC,SAAUxB,EAAMyB,eAChBC,SAAS,WAGb,eAAC,IAAD,WACE,uBAAON,QAAQ,gBAAf,wCACA,cAACC,EAAD,CACEpB,UAAU,gBACVqB,MAAOtB,EAAM2B,MACbH,SAAUxB,EAAM4B,cAChBF,SAAS,WAGb,eAAC,IAAD,WACE,uBAAON,QAAQ,cAAf,gCACA,cAACC,EAAD,CACEpB,UAAU,cACVqB,MAAOtB,EAAM6B,MACbL,SAAUxB,EAAM8B,cAChBJ,SAAS,WAGb,eAAC,IAAD,WACE,uBAAON,QAAQ,OAAf,6BACA,cAAC,EAAD,CACEnB,UAAU,OACVqB,MAAOtB,EAAM+B,KACbP,SAAUxB,EAAMgC,aAChBN,SAAS,WAGb,eAAC,IAAD,WACE,uBAAON,QAAQ,QAAf,oBACA,cAAC,EAAD,CACEnB,UAAU,QACVqB,MAAOtB,EAAMiC,MACbT,SAAUxB,EAAMkC,cAChBR,SAAS,WAGb,eAAC,IAAD,WACE,uBAAON,QAAQ,eAAf,4BACA,cAACC,EAAD,CACEpB,UAAU,eACVqB,MAAOtB,EAAMmC,aACbX,SAAUxB,EAAMoC,qBAChBV,SAAS,WAIb,qBAAKzB,UAAU,qBAAf,SAAqCD,EAAMqC,iB,SCxBlCC,MAvCf,SAAyBtC,GACvB,OACE,qCACE,cAAC,IAAD,CACEkB,KAAK,KACLqB,EAAG,EACHpB,UAAU,SACVR,MAAM,QACNV,UAAU,cALZ,2BASA,cAAC,IAAD,CAAOuC,QAAQ,SAASvC,UAAU,UAAlC,SACE,eAAC,IAAD,CAAOU,MAAM,QAAb,UACE,eAAC,IAAD,WACE,cAAC,IAAD,sBACA,cAAC,IAAD,CAAI8B,WAAS,EAAb,SAAezC,EAAM0C,aAEvB,eAAC,IAAD,WACE,cAAC,IAAD,0BAEA,cAAC,IAAD,CAAID,WAAS,EAAb,SAAezC,EAAM2C,gBAEvB,eAAC,IAAD,WACE,cAAC,IAAD,sBAEA,cAAC,IAAD,CAAIF,WAAS,EAAb,SAAezC,EAAM4C,YAEvB,eAAC,IAAD,CAAI3C,UAAU,SAAd,UACE,cAAC,IAAD,yBAEA,cAAC,IAAD,CAAIwC,WAAS,EAAb,SAAezC,EAAM6C,wB,yCCmDlBC,MAlFf,SAAqB9C,GAAQ,IACnB+C,EAAwB/C,EAAxB+C,MAAOpB,EAAiB3B,EAAjB2B,MAAOE,EAAU7B,EAAV6B,MAChBmB,EAFoB,kDAGxB,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDiD,aAAeC,IAAMC,YAC1B,EAAKC,MAAQ,CACXC,MAAO,GAET,EAAKC,aAAe,WAEhB,EAAKL,aAAaM,SAClB,EAAKN,aAAaM,QAAQC,aAE1B,EAAKC,SAAS,CAAEJ,MAAO,EAAKJ,aAAaM,QAAQC,eAXpC,EAHK,qDAmBxB,WACEE,KAAKJ,eACLK,OAAOC,iBAAiB,SAAUF,KAAKJ,gBArBjB,kCAwBxB,WACEK,OAAOE,oBAAoB,SAAUH,KAAKJ,gBAzBpB,oBA4BxB,WAAU,IACAD,EAAUK,KAAKN,MAAfC,MACR,OACE,sBAAKS,IAAKJ,KAAKT,aAAcc,MAAO,CAAEC,OAAQ,SAA9C,UACE,cAAC,IAAD,CACEC,GAAI,EACJzD,GAAI,EACJ0D,MAAM,SACNhD,KAAK,KACLjB,UAAU,cALZ,uDASA,cAACkE,EAAA,EAAD,CACEC,SAAS,eACTC,UAAU,iCACVC,8BAA+B,CAAC,CAAEC,KAAM,cAAeC,EAAG,MAC1DC,oCAAqC,CAAC,CAAEF,KAAM,gBAC9CG,wBAAsB,EACtBV,OAAQ,IACRW,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,gBAAkBA,EAAML,KAAxB,aAAiCK,EAAMJ,IAC/CK,iBAAiB,EACjBC,eAAe,cACfC,UAAW,CAAEP,EAAG,KAChBQ,QAAS,CACPC,OAAQ,GACRC,KAAM,EACNC,MAAO,GACPC,IAAK,GAEPC,4BAA6B,CAC3B,CAAEd,KAAM,iBAAkBC,EAAGzB,GAC7B,CAAEwB,KAAM,iBAAkBC,EAAGzB,EAAQpB,GACrC,CAAE4C,KAAM,iBAAkBC,EAAGzB,EAAQpB,EAAQE,IAE/CyD,kCAAmC,CACjC,CAAEf,KAAM,kBACR,CAAEA,KAAM,kBACR,CAAEA,KAAM,mBAEVgB,qBAAsB,CACpB,CAAEhB,KAAM,SAAUC,EAAG,KACrB,CAAED,KAAM,gBAAiBC,EAAG,MAE9BgB,cAAc,WACdnC,MAAOA,WAzES,GAECH,IAAMuC,WA6EjC,OAAO,cAACzC,EAAD,K,SCDM0C,MArEf,SAAuB1F,GACrB,OAAKA,EAAM2F,eAAkB3F,EAAM4F,eAAkB5F,EAAM6F,cAQzD,sBAAK5F,UAAU,aAAf,UACE,cAAC,IAAD,CAASiE,MAAM,SAASjD,GAAI,EAAGC,KAAK,KAAKjB,UAAU,cAAnD,iCAIA,eAAC,IAAD,CAAWiE,MAAM,SAAjB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,0BACA,eAAC,IAAD,WAAalE,EAAM8F,uBAAnB,aACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAW5F,KAAK,aACfF,EAAM+F,0BAFT,WAMF,eAAC,IAAD,WACE,cAAC,IAAD,4BACA,eAAC,IAAD,WAAa/F,EAAMgG,sBAAnB,aACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAW9F,KAAK,aACfF,EAAMiG,yBAFT,WAKF,eAAC,IAAD,WACE,cAAC,IAAD,6BACA,eAAC,IAAD,WAAajG,EAAMkG,sBAAnB,aACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAWhG,KAAK,aACfF,EAAMmG,yBAFT,WAKF,eAAC,IAAD,WACE,cAAC,IAAD,oBACA,eAAC,IAAD,WAAanG,EAAMoG,sBAAnB,aACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAWlG,KAAK,aACfF,EAAMqG,yBAFT,cAMJ,eAAC,IAAD,CAAWnC,MAAM,SAASD,GAAI,EAA9B,UACE,eAAC,IAAD,CAAMhE,UAAU,eAAhB,UACE,cAAC,IAAD,4BACA,eAAC,IAAD,WAAaD,EAAM2B,MAAnB,aACA,cAAC,IAAD,yBAGF,eAAC,IAAD,CAAM1B,UAAU,WAAhB,UACE,cAAC,IAAD,wBACA,eAAC,IAAD,WAAaD,EAAMsG,SAAnB,aACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAWpG,KAAK,aACfF,EAAM4F,cAFT,iBAxDJ,mCACE,cAAC,IAAD,CAASpF,GAAI,EAAG0D,MAAM,SAAShD,KAAK,U,kBCiB7BqF,MA9Bf,SAAgBvG,GAAQ,IACd2F,EAAmC3F,EAAnC2F,cAAea,EAAoBxG,EAApBwG,gBACjBC,EAFe,4MAGnBrD,MAAQuC,EAHW,EAInBe,eAAiBF,EAJE,4CAMnB,WACE,OACE,qCACE,qBAAKvG,UAAU,SAAf,mCACA,eAAC,IAAD,WACE,uBACEC,KAAK,QACLI,IAAK,EACLqG,IAAK,GACLrF,MAAOoC,KAAKN,MACZnD,UAAU,SACVuB,SAAUkC,KAAKgD,iBAEjB,qBAAKzG,UAAU,WAAf,SACE,mBAAGA,UAAU,cAAb,SAA4ByD,KAAKN,oBApBxB,GAEEF,IAAMuC,WAyB7B,OAAO,cAACgB,EAAD,KCGMG,MA9Bf,SAAqB5G,GAAQ,IACnB4F,EAAmC5F,EAAnC4F,cAAeiB,EAAoB7G,EAApB6G,gBACjBJ,EAFoB,4MAGxBrD,MAAQwC,EAHgB,EAIxBc,eAAiBG,EAJO,4CAMxB,WACE,OACE,qCACE,qBAAK5G,UAAU,SAAf,oCACA,eAAC,IAAD,WACE,uBACEC,KAAK,QACLI,IAAK,EACLqG,IAAK,GACLrF,MAAOoC,KAAKN,MACZnD,UAAU,SACVuB,SAAUkC,KAAKgD,iBAEjB,qBAAKzG,UAAU,WAAf,SACE,mBAAGA,UAAU,cAAb,SAA4ByD,KAAKN,oBApBnB,GAEHF,IAAMuC,WAyB7B,OAAO,cAACgB,EAAD,KCGMK,I,EAAAA,EA9Bf,SAAqB9G,GAAQ,IACnB6F,EAAmC7F,EAAnC6F,cAAekB,EAAoB/G,EAApB+G,gBACjBN,EAFoB,4MAGxBrD,MAAQyC,EAHgB,EAIxBa,eAAiBK,EAJO,4CAMxB,WACE,OACE,qCACE,qBAAK9G,UAAU,SAAf,4BACA,eAAC,IAAD,WACE,uBACEC,KAAK,QACLI,IAAK,EACLqG,IAAK,GACLrF,MAAOoC,KAAKN,MACZnD,UAAU,SACVuB,SAAUkC,KAAKgD,iBAEjB,qBAAKzG,UAAU,WAAf,SACE,mBAAGA,UAAU,cAAb,SAA4ByD,KAAKN,oBApBnB,GAEHF,IAAMuC,WAyB7B,OAAO,cAACgB,EAAD,KCvBHO,EAASC,IAAOC,IAAV,qJAmDGC,MAzCf,SAAmBnH,GAAQ,IAEvB2F,EAME3F,EANF2F,cACAC,EAKE5F,EALF4F,cACAC,EAIE7F,EAJF6F,cACAW,EAGExG,EAHFwG,gBACAK,EAEE7G,EAFF6G,gBACAE,EACE/G,EADF+G,gBAGIK,EAVkB,4JAWtB,WACE,OACE,cAACJ,EAAD,UACE,qBAAK/G,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAASiB,KAAK,KAAKD,GAAI,EAAGE,UAAU,SAApC,+BAGA,cAAC,EAAD,CACEwE,cAAeA,EACfa,gBAAiBA,IAEnB,cAAC,EAAD,CACEZ,cAAeA,EACfiB,gBAAiBA,IAEnB,cAAC,EAAD,CACEhB,cAAeA,EACfkB,gBAAiBA,eA7BP,GAUNtB,aA4BlB,OAAO,cAAC2B,EAAD,K,kBCuBMC,MA3Ef,SAA0BrH,GAAQ,IACxBuB,EAA2CvB,EAA3CuB,OAAQI,EAAmC3B,EAAnC2B,MAAOE,EAA4B7B,EAA5B6B,MAAOyF,EAAqBtH,EAArBsH,MAAOzE,EAAc7C,EAAd6C,UAC/B0E,EAFyB,kDAG7B,WAAYvH,GAAQ,IAAD,8BACjB,cAAMA,IAEDoD,MAAQ,CACXoE,OAAQ,CACN,CACEC,KAAM,CACJ,CACEC,EAAG,iBACHlD,EAAG,CAAC,EAAG3B,EAAWA,EAAWA,IAE/B,CACE6E,EAAG,QACHlD,EAAG,CAAC3B,EAAWyE,EAAO,EAAGzE,EAAYtB,IAEvC,CACEmG,EAAG,QACHlD,EAAG,CAAC3B,EAAYtB,EAAQ+F,EAAO,EAAGzE,EAAYtB,EAASI,IAEzD,CACE+F,EAAG,QACHlD,EAAG,CACD3B,EAAYtB,EAASI,EACrB2F,EACA,EACAzE,EAAYtB,EAASI,EAAQE,IAGjC,CACE6F,EAAG,QACHlD,EAAG,CAAC,EAAG8C,EAAOA,EAAOA,EAAQzE,OAKrC8E,QAAS,CACPC,MAAO,CACL1H,KAAM,cACN8D,OAAQ,KAEV6D,MAAO,CACLC,KAAM,eACN5D,MAAO,UAET6D,MAAO,CACL7H,KAAM,UAER8H,MAAO,CACLC,QAAS,CACPC,SAAS,MAjDA,EAHU,0CA2D7B,WACE,OACE,qBAAKC,GAAG,QAAR,SACE,cAAC,IAAD,CACER,QAASjE,KAAKN,MAAMuE,QACpBH,OAAQ9D,KAAKN,MAAMoE,OACnBtH,KAAK,cACL8D,OAAQ,YAlEa,GAEPd,IAAMuC,WAsE9B,OAAO,cAAC8B,EAAD,KCyIMa,MA1Mf,WAAuB,IAAD,EACQC,mBAAS,GADjB,mBACb9G,EADa,KACL+G,EADK,OAEMD,mBAAS,GAFf,mBAEb1G,EAFa,KAEN4G,EAFM,OAGgBF,mBAAS,GAHzB,mBAGbG,EAHa,KAGDC,EAHC,OAIIJ,mBAAS,GAJb,mBAIbtG,EAJa,KAIP2G,EAJO,OAKML,mBAAS,GALf,mBAKbpG,EALa,KAKN0G,EALM,OAOoBN,mBAAS,GAP7B,mBAOblG,EAPa,KAOCyG,EAPD,OAQsBP,mBAAS,GAR/B,mBAQb1C,EARa,KAQEkD,EARF,OASsBR,mBAAS,GAT/B,mBASbzC,EATa,KASEkD,EATF,OAUsBT,mBAAS,GAV/B,mBAUbxC,EAVa,KAUEkD,EAVF,OAYgBV,mBAAS,IAZzB,mBAYbhG,EAZa,KAedK,GAfc,KAeJnB,EAASI,GACnBgB,EAAaqG,KAAKC,MAAOlH,EAAO,IAAOW,EAAU8F,GACjD3F,EAAYmG,KAAKC,MAAMvG,EAAUC,GACjCC,EAASoG,KAAKC,MAClBpG,EAAyB,IAAb2F,EAAoB3F,GAAaZ,EAAQ,MAUjDiH,GAAwB3H,EAASoE,EAAiB,IAAMpE,GAAUI,EAClEwH,GAAyBH,KAAKC,MACjClH,EAAO,IAAOmH,EAAsBV,GAKjC1C,GAHwBkD,KAAKC,MACjCC,EAAsBC,IAE+BtG,EAWjDkD,IACHD,GAAyBjD,EAC1B,KACAuG,QAAQ,GAGJC,GAAqB9H,GAAUI,EAASA,EAAQiE,EAAiB,KACjE0D,GAAwBN,KAAKC,MAChClH,EAAO,IAAOsH,GAAqBb,GAKhCxC,GAHuBgD,KAAKC,MAChCI,GAAqBC,IAE8BzG,EAC/CoD,IACHD,GAAwBnD,EACzB,KACAuG,QAAQ,GACJ9C,IAAY3E,EAASA,EAAQiE,EAAiB,KAAKwD,QAAQ,GAE3DG,GAAmBP,KAAKC,OAC3BlH,EAAO,IAAM8D,EAAgB,KAAOnD,EAAU8F,GAG3CtC,GADuB8C,KAAKC,MAAMvG,EAAU6G,IACG1G,EAC/CsD,IACHD,GAAwBrD,EACzB,KACAuG,QAAQ,GAEJhD,GACJN,GAAyBE,GAAwBE,GAC7CG,IAIJ,KAHCL,GAAwBnD,EACvBqD,GAAwBrD,EACxBiD,GAAyBjD,IAE3BuG,QAAQ,GAGJI,GAAiB1D,GAAyB3D,EAAgB,IAC1DsH,GAAiBzD,GAAwB7D,EAAgB,IACzDuH,GAAiBxD,GAAwB/D,EAAgB,IAoC/D,OACE,eAAC,IAAD,CACEwH,aAAa,iBACbC,gBAAgB,iBAChBC,IAAK,EAHP,UAKE,eAAC,IAAD,CAAU5J,UAAU,cAAc6J,QAAS,EAAGC,QAAS,EAAGtJ,GAAG,YAA7D,UACE,cAAC,EAAD,CACEc,OAAQA,EACRI,MAAOA,EACPE,MAAO2G,EACPzG,KAAMA,EACNE,MAAOA,EACPE,aAAcA,EACdE,WAAYA,EACZZ,eAjDR,SAA4BuI,GAC1B1B,EAAU2B,SAASD,EAAEE,OAAO5I,MAAO,MAiD7BM,cA/CR,SAA2BoI,GACzBzB,EAAS0B,SAASD,EAAEE,OAAO5I,MAAO,MA+C5BQ,cA7CR,SAAgCkI,GAC9BvB,EAAcwB,SAASD,EAAEE,OAAO5I,MAAO,MA6CjCU,aA3CR,SAA0BgI,GACxBtB,EAAQuB,SAASD,EAAEE,OAAO5I,MAAO,MA2C3BY,cAzCR,SAA2B8H,GACzBrB,EAASsB,SAASD,EAAEE,OAAO5I,MAAO,MAyC5Bc,qBAvCR,SAAkC4H,GAChCpB,EAAgBqB,SAASD,EAAEE,OAAO5I,MAAO,MAuCnC6I,aAzBR,SAA0BC,GACxBA,EAAMC,oBA0BF,cAAC,EAAD,CACE3H,QAASA,EACTC,WAAYA,EACZE,UAAWA,EACXD,OAAQA,OAGZ,cAAC,IAAD,CAAUkH,QAAS,EAAGC,QAAS,EAAGtJ,GAAG,YAArC,SACE,cAAC,EAAD,CACEkF,cAAeA,EACfC,cAAeA,EACfC,cAAeA,EACfW,gBAlDR,SAAmCwD,GACjCnB,EAAiBoB,SAASD,EAAEE,OAAO5I,MAAO,MAkDpCuF,gBAhDR,SAAmCmD,GACjClB,EAAiBmB,SAASD,EAAEE,OAAO5I,MAAO,MAgDpCyF,gBA9CR,SAAmCiD,GACjCjB,EAAiBkB,SAASD,EAAEE,OAAO5I,MAAO,UAgDxC,cAAC,IAAD,CAAUwI,QAAS,EAAGC,QAAS,EAAGtJ,GAAG,YAArC,SACE,cAAC,EAAD,CACEqF,uBAAwBA,GACxBC,0BAA2BA,GAC3BC,sBAAuBA,GACvBC,yBAA0BA,GAC1BC,sBAAuBA,GACvBC,yBAA0BA,GAC1BC,sBAAuBA,GACvBC,yBAA0BA,GAC1B1E,MAAOA,EACPiE,cAAeA,EACfU,SAAUA,GACVX,cAAeA,EACfE,cAAeA,MAGnB,cAAC,IAAD,CAAUiE,QAAS,EAAGC,QAAS,EAAGtJ,GAAG,YAArC,SACE,cAAC,EAAD,CACEc,OAAQuE,GACRnE,MAAOqE,GACPnE,MAAOqE,GACPoB,MAAOlB,GACPvD,UAAWA,MAGf,cAAC,IAAD,CAAUiH,QAAS,EAAGC,QAAS,EAAGtJ,GAAG,YAArC,SACE,cAAC,EAAD,CACEsC,MAAOyG,GACP7H,MAAO8H,GACP5H,MAAO6H,WCtMXY,EAAQC,YAAY,CACxBC,MAAO,CACLC,QAAS,YACTC,KAAM,WAERC,OAAQ,CACNC,MAAO,CACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UAELC,IAAK,cAYI7D,MARf,WACE,OACE,cAAC,IAAD,CAAgBkD,MAAOA,EAAvB,SACE,cAAC,EAAD,OCdSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKMQ,QACW,cAA7BhI,OAAOiI,SAASC,UAEe,UAA7BlI,OAAOiI,SAASC,UAEhBlI,OAAOiI,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhB,MAAK,SAAAiB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,YClH5BzB,M","file":"static/js/main.8d75b163.chunk.js","sourcesContent":["import { Heading } from \"@chakra-ui/react\";\n\nfunction Header() {\n  return (\n    <Heading mb={10} align=\"center\" size=\"lg\">\n      Simulate the impact of Pricing as a Profit Driver\n    </Heading>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  NumberInput,\n  NumberInputField,\n  InputGroup,\n  InputRightElement,\n} from \"@chakra-ui/react\";\n\nfunction InputEuro(props) {\n  const { className, type = \"number\", ...rest } = props;\n  const classes = clsx(\"ui_numberfield\", className);\n\n  return (\n    <InputGroup>\n      <NumberInput min={0} ml=\"auto\" mb={2}>\n        <NumberInputField\n          className={classes}\n          type={type}\n          {...rest}\n          bg=\"white\"\n        />\n        <InputRightElement\n          pointerEvents=\"none\"\n          color=\"gray.400\"\n          fontSize=\"1.2em\"\n          children=\"€\"\n        />\n      </NumberInput>\n    </InputGroup>\n  );\n}\n\nexport default InputEuro;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  NumberInput,\n  NumberInputField,\n  InputGroup,\n  InputRightElement,\n} from \"@chakra-ui/react\";\n\nfunction InputPercent(props) {\n  const { className, type = \"number\", ...rest } = props;\n  const classes = clsx(\"ui_numberfield\", className);\n\n  return (\n    <InputGroup>\n      <NumberInput min={0} ml=\"auto\" mb={2}>\n        <NumberInputField\n          className={classes}\n          type={type}\n          {...rest}\n          bg=\"white\"\n        />\n        <InputRightElement\n          pointerEvents=\"none\"\n          color=\"gray.400\"\n          fontSize=\"1.2em\"\n          children=\"%\"\n        />\n      </NumberInput>\n    </InputGroup>\n  );\n}\n\nexport default InputPercent;\n","import React from \"react\";\nimport { VStack, Flex, Heading } from \"@chakra-ui/react\";\nimport InputEuro from \"./Input\";\nimport InputPercent from \"./InputPercent\";\n\nfunction AddInputForm(props) {\n  return (\n    <VStack className=\"inputForm\" mx={5} my={4}>\n      <Heading size=\"sm\" my={3} textAlign=\"center\">\n        Your actual company data\n      </Heading>\n      <Flex>\n        <label htmlFor=\"volume_sold\">Volume of product sold:</label>\n        <InputEuro\n          className=\"volume_sold\"\n          value={props.volume}\n          onChange={props.onVolumeChange}\n          maxWidth=\"80%\"\n        />\n      </Flex>\n      <Flex>\n        <label htmlFor=\"average_price\">Average price per product:</label>\n        <InputEuro\n          className=\"average_price\"\n          value={props.price}\n          onChange={props.onPriceChange}\n          maxWidth=\"80%\"\n        />\n      </Flex>\n      <Flex>\n        <label htmlFor=\"fixed_costs\">Total fixed costs:</label>\n        <InputEuro\n          className=\"fixed_costs\"\n          value={props.costs}\n          onChange={props.onCostsChange}\n          maxWidth=\"80%\"\n        />\n      </Flex>\n      <Flex>\n        <label htmlFor=\"cogs\">Variable costs:</label>\n        <InputPercent\n          className=\"cogs\"\n          value={props.cogs}\n          onChange={props.onCogsChange}\n          maxWidth=\"80%\"\n        />\n      </Flex>\n      <Flex>\n        <label htmlFor=\"taxes\">Taxes:</label>\n        <InputPercent\n          className=\"taxes\"\n          value={props.taxes}\n          onChange={props.onTaxesChange}\n          maxWidth=\"80%\"\n        />\n      </Flex>\n      <Flex>\n        <label htmlFor=\"targetProfit\">Target profit:</label>\n        <InputEuro\n          className=\"targetProfit\"\n          value={props.targetProfit}\n          onChange={props.onTargetProfitChange}\n          maxWidth=\"80%\"\n        />\n      </Flex>\n\n      <div className=\"validation-message\">{props.validation}</div>\n    </VStack>\n  );\n}\n\nexport default AddInputForm;\n","import React from \"react\";\nimport { Table, Tr, Tbody, Td, Heading } from \"@chakra-ui/react\";\n\nfunction AddCurrentState(props) {\n  return (\n    <>\n      <Heading\n        size=\"sm\"\n        m={3}\n        textAlign=\"center\"\n        color=\"white\"\n        className=\"smallHeader\"\n      >\n        Current state\n      </Heading>\n      <Table variant=\"simple\" className=\"analyse\">\n        <Tbody color=\"white\">\n          <Tr>\n            <Td>Revenue</Td>\n            <Td isNumeric>{props.revenue}</Td>\n          </Tr>\n          <Tr>\n            <Td>Total Costs</Td>\n\n            <Td isNumeric>{props.totalCosts}</Td>\n          </Tr>\n          <Tr>\n            <Td>EBIDTA </Td>\n\n            <Td isNumeric>{props.ebitda}</Td>\n          </Tr>\n          <Tr className=\"profit\">\n            <Td>Net Profit</Td>\n\n            <Td isNumeric>{props.netProfit}</Td>\n          </Tr>\n        </Tbody>\n      </Table>\n    </>\n  );\n}\n\nexport default AddCurrentState;\n","import React from \"react\";\nimport { ChartBullet } from \"@patternfly/react-charts\";\nimport { Heading } from \"@chakra-ui/react\";\nfunction BulletChart(props) {\n  const { sales, price, costs } = props;\n  class BulletCharts extends React.Component {\n    constructor(props) {\n      super(props);\n      this.containerRef = React.createRef();\n      this.state = {\n        width: 0,\n      };\n      this.handleResize = () => {\n        if (\n          this.containerRef.current &&\n          this.containerRef.current.clientWidth\n        ) {\n          this.setState({ width: this.containerRef.current.clientWidth });\n        }\n      };\n    }\n\n    componentDidMount() {\n      this.handleResize();\n      window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n\n    render() {\n      const { width } = this.state;\n      return (\n        <div ref={this.containerRef} style={{ height: \"180px\" }}>\n          <Heading\n            mt={7}\n            mb={3}\n            align=\"center\"\n            size=\"sm\"\n            className=\"smallHeader\"\n          >\n            Optimization impact on target profit in %\n          </Heading>\n          <ChartBullet\n            ariaDesc=\"Optimization\"\n            ariaTitle=\"Optimization for target profit\"\n            comparativeWarningMeasureData={[{ name: \"Your target\", y: 100 }]}\n            comparativeWarningMeasureLegendData={[{ name: \"Your target\" }]}\n            constrainToVisibleArea\n            height={250}\n            labels={({ datum }) => `${datum.name}: ${datum.y}`}\n            legendAllowWrap={true}\n            legendPosition=\"bottom-left\"\n            maxDomain={{ y: 100 }}\n            padding={{\n              bottom: 50,\n              left: 0,\n              right: 70,\n              top: 5, // Adjusted to accommodate labels\n            }}\n            primarySegmentedMeasureData={[\n              { name: \"Sales increase\", y: sales },\n              { name: \"Price increase\", y: sales + price },\n              { name: \"Costs decrease\", y: sales + price + costs },\n            ]}\n            primarySegmentedMeasureLegendData={[\n              { name: \"Sales increase\" },\n              { name: \"Price increase\" },\n              { name: \"Costs decrease\" },\n            ]}\n            qualitativeRangeData={[\n              { name: \"Target\", y: 100 },\n              { name: \"Target exceed\", y: 120 },\n            ]}\n            titlePosition=\"top-left\"\n            width={width}\n          />\n        </div>\n      );\n    }\n  }\n  return <BulletCharts />;\n}\n\nexport default BulletChart;\n","import React from \"react\";\nimport {\n  StatGroup,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  Heading,\n  Progress,\n} from \"@chakra-ui/react\";\n\nfunction AddStatImpact(props) {\n  if (!props.salesIncrease && !props.priceIncrease && !props.costsDecrease) {\n    return (\n      <>\n        <Heading mb={3} align=\"center\" size=\"sm\"></Heading>\n      </>\n    );\n  }\n  return (\n    <div className=\"statImpact\">\n      <Heading align=\"center\" my={2} size=\"sm\" className=\"smallHeader\">\n        Optimization impact\n      </Heading>\n\n      <StatGroup align=\"center\">\n        <Stat>\n          <StatLabel>Volume sold</StatLabel>\n          <StatNumber>{props.difNetProfitVolumeEuro} €</StatNumber>\n          <StatHelpText>\n            <StatArrow type=\"increase\" />\n            {props.difNetProfitVolumePercent} %\n          </StatHelpText>\n        </Stat>\n\n        <Stat>\n          <StatLabel>Average Price</StatLabel>\n          <StatNumber>{props.difNetProfitPriceEuro} €</StatNumber>\n          <StatHelpText>\n            <StatArrow type=\"increase\" />\n            {props.difNetProfitPricePercent} %\n          </StatHelpText>\n        </Stat>\n        <Stat>\n          <StatLabel>Costs Decrease</StatLabel>\n          <StatNumber>{props.difNetProfitCostsEuro} €</StatNumber>\n          <StatHelpText>\n            <StatArrow type=\"increase\" />\n            {props.difNetProfitCostsPercent} %\n          </StatHelpText>\n        </Stat>\n        <Stat>\n          <StatLabel>Total</StatLabel>\n          <StatNumber>{props.optimizationTotalEuro} €</StatNumber>\n          <StatHelpText>\n            <StatArrow type=\"increase\" />\n            {props.optimizationTotalPercent} %\n          </StatHelpText>\n        </Stat>\n      </StatGroup>\n      <StatGroup align=\"center\" mt={4}>\n        <Stat className=\"currentPrice\">\n          <StatLabel>Current price</StatLabel>\n          <StatNumber>{props.price} €</StatNumber>\n          <StatHelpText>Average</StatHelpText>\n        </Stat>\n\n        <Stat className=\"newPrice\">\n          <StatLabel>New Price</StatLabel>\n          <StatNumber>{props.newPrice} €</StatNumber>\n          <StatHelpText>\n            <StatArrow type=\"increase\" />\n            {props.priceIncrease} %\n          </StatHelpText>\n        </Stat>\n      </StatGroup>\n    </div>\n  );\n}\n\nexport default AddStatImpact;\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nfunction Slider(props) {\n  const { salesIncrease, onSalesIncrease } = props;\n  class MySlider extends React.Component {\n    state = salesIncrease;\n    handleOnChange = onSalesIncrease;\n\n    render() {\n      return (\n        <>\n          <div className=\"legend\">Sales Target increase</div>\n          <Flex>\n            <input\n              type=\"range\"\n              min={0}\n              max={50}\n              value={this.state}\n              className=\"slider\"\n              onChange={this.handleOnChange}\n            />\n            <div className=\"valueBox\">\n              <p className=\"sliderValue\">{this.state}</p>\n            </div>\n          </Flex>\n        </>\n      );\n    }\n  }\n  return <MySlider />;\n}\n\nexport default Slider;\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nfunction PriceSlider(props) {\n  const { priceIncrease, onPriceIncrease } = props;\n  class MySlider extends React.Component {\n    state = priceIncrease;\n    handleOnChange = onPriceIncrease;\n\n    render() {\n      return (\n        <>\n          <div className=\"legend\">Average Price increase</div>\n          <Flex>\n            <input\n              type=\"range\"\n              min={0}\n              max={50}\n              value={this.state}\n              className=\"slider\"\n              onChange={this.handleOnChange}\n            />\n            <div className=\"valueBox\">\n              <p className=\"sliderValue\">{this.state}</p>\n            </div>\n          </Flex>\n        </>\n      );\n    }\n  }\n  return <MySlider />;\n}\n\nexport default PriceSlider;\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nfunction CostsSlider(props) {\n  const { costsDecrease, onCostsDecrease } = props;\n  class MySlider extends React.Component {\n    state = costsDecrease;\n    handleOnChange = onCostsDecrease;\n\n    render() {\n      return (\n        <>\n          <div className=\"legend\">Costs decrease</div>\n          <Flex>\n            <input\n              type=\"range\"\n              min={0}\n              max={50}\n              value={this.state}\n              className=\"slider\"\n              onChange={this.handleOnChange}\n            />\n            <div className=\"valueBox\">\n              <p className=\"sliderValue\">{this.state}</p>\n            </div>\n          </Flex>\n        </>\n      );\n    }\n  }\n  return <MySlider />;\n}\n\nexport default CostsSlider;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Slider from \"./Slider\";\nimport PriceSlider from \"./PriceSlider\";\nimport CostsSlider from \"./CostsSlider\";\nimport { Heading } from \"@chakra-ui/react\";\n\nconst Styles = styled.div`\n  .App {\n    display: flex;\n    justify-content: center;\n    color: white;\n  }\n  .wrapper {\n    width: 100%;\n  }\n`;\nfunction AddSlider(props) {\n  const {\n    salesIncrease,\n    priceIncrease,\n    costsDecrease,\n    onSalesIncrease,\n    onPriceIncrease,\n    onCostsDecrease,\n  } = props;\n\n  class App extends Component {\n    render() {\n      return (\n        <Styles>\n          <div className=\"App\">\n            <div className=\"wrapper\">\n              <Heading size=\"sm\" my={3} textAlign=\"center\">\n                Optimisation in %\n              </Heading>\n              <Slider\n                salesIncrease={salesIncrease}\n                onSalesIncrease={onSalesIncrease}\n              />\n              <PriceSlider\n                priceIncrease={priceIncrease}\n                onPriceIncrease={onPriceIncrease}\n              />\n              <CostsSlider\n                costsDecrease={costsDecrease}\n                onCostsDecrease={onCostsDecrease}\n              />\n            </div>\n          </div>\n        </Styles>\n      );\n    }\n  }\n\n  return <App />;\n}\n\nexport default AddSlider;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nfunction CandleStickChart(props) {\n  const { volume, price, costs, total, netProfit } = props;\n  class ApexChart extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        series: [\n          {\n            data: [\n              {\n                x: \"current profit\",\n                y: [0, netProfit, netProfit, netProfit],\n              },\n              {\n                x: \"sales\",\n                y: [netProfit, total, 0, netProfit + volume],\n              },\n              {\n                x: \"price\",\n                y: [netProfit + volume, total, 0, netProfit + volume + price],\n              },\n              {\n                x: \"costs\",\n                y: [\n                  netProfit + volume + price,\n                  total,\n                  0,\n                  netProfit + volume + price + costs,\n                ],\n              },\n              {\n                x: \"total\",\n                y: [0, total, total, total + netProfit],\n              },\n            ],\n          },\n        ],\n        options: {\n          chart: {\n            type: \"candlestick\",\n            height: 350,\n          },\n          title: {\n            text: \"Optimization\",\n            align: \"center\",\n          },\n          xaxis: {\n            type: \"number\",\n          },\n          yaxis: {\n            tooltip: {\n              enabled: true,\n            },\n          },\n        },\n      };\n    }\n\n    render() {\n      return (\n        <div id=\"chart\">\n          <ReactApexChart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"candlestick\"\n            height={250}\n          />\n        </div>\n      );\n    }\n  }\n  return <ApexChart />;\n}\n\nexport default CandleStickChart;\n","import React, { useState } from \"react\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\nimport AddInputForm from \"./AddInputForm\";\nimport AddCurrentState from \"./AddCurrentState\";\nimport BulletChart from \"./charts/BulletChart\";\nimport AddStatImpact from \"./AddStatImpact\";\nimport AddSlider from \"./slider/AddSlider\";\n\nimport CandleStickChart from \"./charts/CandleStickChart\";\n\nfunction InputFront() {\n  const [volume, setVolume] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [fixedCosts, setFixedCosts] = useState(0);\n  const [cogs, setCogs] = useState(0);\n  const [taxes, setTaxes] = useState(0);\n\n  const [targetProfit, setTargetProfit] = useState(0);\n  const [salesIncrease, setSalesIncrease] = useState(0);\n  const [priceIncrease, setPriceIncrease] = useState(0);\n  const [costsDecrease, setCostsDecrease] = useState(0);\n\n  const [validation, setValidation] = useState(\"\");\n\n  // calculations of the current state\n  const revenue = volume * price;\n  const totalCosts = Math.round((cogs / 100) * revenue + fixedCosts);\n  const netProfit = Math.round(revenue - totalCosts);\n  const ebitda = Math.round(\n    netProfit + fixedCosts * 0.35 + netProfit * (taxes / 100)\n  );\n  // total costs = variable_costs + fixed_costs\n  // variable costs = cogs in % * revenue\n  // EBITDA = netProfit + amortization + deprecation + interest + netProfit * taxes%\n  // amortization = fixed_costs * 0,1\n  // deprecation = fixed_costs * 0,2\n  // interest = fixed_costs * 0,05\n\n  // calculations of optimization impact of SALES increase\n  const newRevenueVolumeInc = ((volume * salesIncrease) / 100 + volume) * price;\n  const newTotalCostsVolumeInc = Math.round(\n    (cogs / 100) * newRevenueVolumeInc + fixedCosts\n  );\n  const newNetProfitVolumeInc = Math.round(\n    newRevenueVolumeInc - newTotalCostsVolumeInc\n  );\n  const difNetProfitVolumeEuro = newNetProfitVolumeInc - netProfit;\n  function handleVolumePercent() {\n    if (!salesIncrease) {\n      return 0;\n    }\n    const difNetProfitVolumePercent = (\n      (difNetProfitVolumeEuro / netProfit) *\n      100\n    ).toFixed(2);\n    return difNetProfitVolumePercent;\n  }\n  const difNetProfitVolumePercent = (\n    (difNetProfitVolumeEuro / netProfit) *\n    100\n  ).toFixed(2);\n\n  // calculations of optimization impact of PRICE increase\n  const newRevenuePriceInc = volume * (price + (price * priceIncrease) / 100);\n  const newTotalCostsPriceInc = Math.round(\n    (cogs / 100) * newRevenuePriceInc + fixedCosts\n  );\n  const newNetProfitPriceInc = Math.round(\n    newRevenuePriceInc - newTotalCostsPriceInc\n  );\n  const difNetProfitPriceEuro = newNetProfitPriceInc - netProfit;\n  const difNetProfitPricePercent = (\n    (difNetProfitPriceEuro / netProfit) *\n    100\n  ).toFixed(2);\n  const newPrice = (price + (price * priceIncrease) / 100).toFixed(2);\n  // calculations of optimization impact of COSTS decrease\n  const newTotalCostsDec = Math.round(\n    (cogs / 100 - costsDecrease / 100) * revenue + fixedCosts\n  );\n  const newNetProfitCostsDec = Math.round(revenue - newTotalCostsDec);\n  const difNetProfitCostsEuro = newNetProfitCostsDec - netProfit;\n  const difNetProfitCostsPercent = (\n    (difNetProfitCostsEuro / netProfit) *\n    100\n  ).toFixed(2);\n  // total\n  const optimizationTotalEuro =\n    difNetProfitVolumeEuro + difNetProfitPriceEuro + difNetProfitCostsEuro;\n  const optimizationTotalPercent = (\n    (difNetProfitPriceEuro / netProfit +\n      difNetProfitCostsEuro / netProfit +\n      difNetProfitVolumeEuro / netProfit) *\n    100\n  ).toFixed(2);\n  // target value\n\n  const salesToTarget = (difNetProfitVolumeEuro / targetProfit) * 100;\n  const priceToTarget = (difNetProfitPriceEuro / targetProfit) * 100;\n  const costsToTarget = (difNetProfitCostsEuro / targetProfit) * 100;\n  // ACTUAL DATA\n  function handleVolumeChange(e) {\n    setVolume(parseInt(e.target.value, 10));\n  }\n  function handlePriceChange(e) {\n    setPrice(parseInt(e.target.value, 10));\n  }\n  function handleFixedCostsChange(e) {\n    setFixedCosts(parseInt(e.target.value, 10));\n  }\n  function handleCogsChange(e) {\n    setCogs(parseInt(e.target.value, 10));\n  }\n  function handleTaxesChange(e) {\n    setTaxes(parseInt(e.target.value, 10));\n  }\n  function handleTargetProfitChange(e) {\n    setTargetProfit(parseInt(e.target.value, 10));\n  }\n  // Optimization data\n  function handleSalesIncreaseChange(e) {\n    setSalesIncrease(parseInt(e.target.value, 10));\n  }\n  function handlePriceIncreaseChange(e) {\n    setPriceIncrease(parseInt(e.target.value, 10));\n  }\n  function handleCostsDecreaseChange(e) {\n    setCostsDecrease(parseInt(e.target.value, 10));\n  }\n  // Optimization input\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n  }\n\n  return (\n    <Grid\n      templateRows=\"repeat(3, 1fr)\"\n      templateColumns=\"repeat(7, 1fr)\"\n      gap={0}\n    >\n      <GridItem className=\"input_class\" rowSpan={3} colSpan={2} bg=\"brand.100\">\n        <AddInputForm\n          volume={volume}\n          price={price}\n          costs={fixedCosts}\n          cogs={cogs}\n          taxes={taxes}\n          targetProfit={targetProfit}\n          validation={validation}\n          onVolumeChange={handleVolumeChange}\n          onPriceChange={handlePriceChange}\n          onCostsChange={handleFixedCostsChange}\n          onCogsChange={handleCogsChange}\n          onTaxesChange={handleTaxesChange}\n          onTargetProfitChange={handleTargetProfitChange}\n          onFormSubmit={handleFormSubmit}\n        />\n        <AddCurrentState\n          revenue={revenue}\n          totalCosts={totalCosts}\n          netProfit={netProfit}\n          ebitda={ebitda}\n        />\n      </GridItem>\n      <GridItem rowSpan={1} colSpan={2} bg=\"brand.200\">\n        <AddSlider\n          salesIncrease={salesIncrease}\n          priceIncrease={priceIncrease}\n          costsDecrease={costsDecrease}\n          onSalesIncrease={handleSalesIncreaseChange}\n          onPriceIncrease={handlePriceIncreaseChange}\n          onCostsDecrease={handleCostsDecreaseChange}\n        />\n      </GridItem>\n      <GridItem rowSpan={1} colSpan={3} bg=\"brand.200\">\n        <AddStatImpact\n          difNetProfitVolumeEuro={difNetProfitVolumeEuro}\n          difNetProfitVolumePercent={difNetProfitVolumePercent}\n          difNetProfitPriceEuro={difNetProfitPriceEuro}\n          difNetProfitPricePercent={difNetProfitPricePercent}\n          difNetProfitCostsEuro={difNetProfitCostsEuro}\n          difNetProfitCostsPercent={difNetProfitCostsPercent}\n          optimizationTotalEuro={optimizationTotalEuro}\n          optimizationTotalPercent={optimizationTotalPercent}\n          price={price}\n          priceIncrease={priceIncrease}\n          newPrice={newPrice}\n          salesIncrease={salesIncrease}\n          costsDecrease={costsDecrease}\n        />\n      </GridItem>\n      <GridItem rowSpan={1} colSpan={5} bg=\"brand.400\">\n        <CandleStickChart\n          volume={difNetProfitVolumeEuro}\n          price={difNetProfitPriceEuro}\n          costs={difNetProfitCostsEuro}\n          total={optimizationTotalEuro}\n          netProfit={netProfit}\n        />\n      </GridItem>\n      <GridItem rowSpan={1} colSpan={5} bg=\"brand.300\">\n        <BulletChart\n          sales={salesToTarget}\n          price={priceToTarget}\n          costs={costsToTarget}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n\nexport default InputFront;\n","import \"@fontsource/raleway/400.css\";\nimport \"@fontsource/open-sans/700.css\";\nimport React from \"react\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport Header from \"./components/Header\";\nimport InputFront from \"./components/InputFront\";\nconst theme = extendTheme({\n  fonts: {\n    heading: \"Open Sans\",\n    body: \"Raleway\",\n  },\n  colors: {\n    brand: {\n      100: \"#24245c\",\n      200: \"#1f527b\",\n      300: \"#3e9494\",\n      400: \"#6a92b3\",\n      // ...\n      900: \"#1a202c\",\n    },\n  },\n});\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <InputFront />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}